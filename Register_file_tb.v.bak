`timescale 1ps/1ps

module Register_file_tb;

localparam CLK_PERIOD = 10,
           reg_count = 10+1,
           reg_width = 12;

wire clk;
initial begin
    clk <= 0;
    forever begin
        #(CLK_PERIOD/2);
        clk <= ~clk;
    end
end

wire [reg_count-1:0] read_en, write_en;
wire reset;
wire [reg_width-1:0] datain;

//
Register_File #(.reg_count(reg_count), .reg_width(reg_width)) (.*);

initial begin
    
    @(posedge clk) begin
        reset <= 1'b1;
    end

    @(posedge clk) begin
        read_en <= 11'b000000000000;
        write_en <= 11'b00000000001; // write to R
        datain <= 12'b1000000010000;
        reset <= 1'b0;
    end

    #2
    @(posedge clk) begin
        read_en <= 11'b000000000001; // read from R
        write_en <= 11'b00000000000; 
        //datain <= 12'b1000000010000;
        reset <= 1'b0;
    end

end


endmodule