DEPTH = 256;                               % Memory depth and width are required %
                                          % DEPTH is the number of addresses %
WIDTH = 12;                               % WIDTH is the number of bits of data per word %
                                          % DEPTH and WIDTH should be entered as decimal numbers %
ADDRESS_RADIX = DEC;                      % Address and value radixes are required %
DATA_RADIX = DEC;                         % Enter BIN, DEC, HEX, OCT, or UNS; unless %
                                          % otherwise specified, radixes = HEX %

CONTENT
BEGIN
0 : 0;  --CLR
1 : 16;     --MVAC_rnow
2 : 17;     --MVAC_cATnow
3 : 18;     --MVAC_cBnow
4 : 1;  --LOAD
5 : 0;  --address of cAT
6 : 14;     --MVAC_cAT
7 : 12; --MVAC_R
8 : 19; --MOV_Total
9 : 2 ;     --MUL
10 : 12;    --MVAC_R
11 : 1;     --LOAD
12 : 5;     --address of [gamma_address]
13 : 3;     --ADD
14 : 11;    --MVAC_gammap
15 : 1;     --LOAD
16 : 1;     --INNITIAL address of row B
17 : 13;    --MVAC_row
18 : 12;    --MVAC_R
19 : 19 ;   --MOV_Total
20 : 2;     --MUL
21 : 12;    --MVAC_R
22 : 1;     --LOAD
23 : 4;     --address of [beta_address]
24 : 3;     --ADD
25 : 10;    --MVAC_betap
26 : 1;     --LOAD
27 : 2;     --address of cB
28 : 15;    --MVAC_cB
29 : 1;     --LOAD
30 : 3;     --address of [alpa_address]
31 : 9;     --MVAC_alphap
32 : 19 ;   --MOV_Total
33 : 5;     --INC
34 : 18;    --MVAC_cBnow
35 : 0;     --CLR
36 : 8;     --MVAC_total

37 : 21;    --MOV_betap --loop start
38 : 31;    --LOAD REG
39 : 12;    --MVAC_R
40 : 20;    --MOV_alphap
41 : 31;    --LOAD REG
42 : 33;     --XOR
43 : 30;    --STORE
44 : 32;    --ENDOP

END; 