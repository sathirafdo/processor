DEPTH = 256;                               % Memory depth and width are required %
                                          % DEPTH is the number of addresses %
WIDTH = 12;                               % WIDTH is the number of bits of data per word %
                                          % DEPTH and WIDTH should be entered as decimal numbers %
ADDRESS_RADIX = DEC;                      % Address and value radixes are required %
DATA_RADIX = DEC;                         % Enter BIN, DEC, HEX, OCT, or UNS; unless %
                                          % otherwise specified, radixes = HEX %

CONTENT
BEGIN
0 : 0; --CLR
1 : 16; --MVAC_rnow
2 : 17; --MVAC_cATnow
3 : 18; --MVAC_cBnow
4 : 1; --LOAD
5 : 0; --address of cAT
6 : 14; --MVAC_cAT
7 : 12;--MVAC_R
8 : 19;--MOV_Total
9 : 2 ; --MUL
10 : 12; --MVAC_R
11 : 1; --LOAD
12 : 5; --address of [gamma_address]
13 : 3; --ADD
14 : 11; --MVAC_gammap
15 : 1; --LOAD
16 : 1; --INNITIAL address of row B
17 : 13; --MVAC_row
18 : 12; --MVAC_R
19 : 19; --MOV_Total
20 : 2; --MUL
21 : 12; --MVAC_R
22 : 1; --LOAD
23 : 4; --address of [beta_address]
24 : 3; --ADD
25 : 10; --MVAC_betap
26 : 1; --LOAD
27 : 2; --address of cB
28 : 12; --MVAC_R
29 : 19; --MOV_Total
30 : 3; --ADD
31 : 15; --MVAC_cB
32 : 1; --LOAD
33 : 3; --address of [alpa_address]
34 : 9; --MVAC_alphap
35 : 19; --MOV_Total
36 : 5; --INC
37 : 18; --MVAC_cBnow
38 : 0; --CLR
39 : 8; --MVAC_total
40 : 21; --MOV_betap
41 : 31; --LOAD REG
42 : 12; --MVAC_R
43 : 20; --MOV_alphap
44 : 31; --LOAD REG
45 : 2; --MUL
46 : 12; --MVAC_R
47 : 19; ----MOV_total
48 : 3; --ADD
49 : 8; --MVAC_total
50 : 27; --MOV_rnow
51 : 5; --INC
52 : 16; --MVAC_rnow
53 : 12; --MVAC_R
54 : 24; --MOV_row //MOV_r
55 : 4; --SUB
56 : 7; --JUMPZ
57 : 63;      ---?????????????? ; --check this
58 : 20; --MOV_alphap
59 : 5; --INC
60 : 9; --MVAC_alphap
61 : 21; --MOV_betap
62 : 5; --INC
63 : 10; --MVAC_betap
64 : 6; --JUMP PC
65 : 40;
66 : 19; --MOV_TOTAL
67 : 30; --STORE
68 : 22; --MOV_gammap
69 : 5; --INC
70 : 11; --MVACgammap
71 : 0; --CLR
72 : 8; --MVAC_total
73 : 28; --MOV_cATnow
74 : 5; --INC
75 : 17; --MVAC_cATnow
76 : 12; --MVAC_ R
77 : 25; --MOV_cAT
78 : 4; --SUB
79 : 7; --JUMPZ PC
80 : 94;
81 : 20; --MOV_alphap
82 : 5; --INC
83 : 9; --MVAC_alphap
84 : 24; --MOV_row
85 :12; --MVAC_R
86 : 21; --MOV betap
87 : 4; --SUB
88 : 5; --INC
89 : 10; --MVAC _betap
90 : 0; --CLR
91 : 16; --MVAC_rnow
92 : 6; --JUMP PC
93 :40;
94 : 0; --CLR
95 : 16; --MVAC_rnow
96 : 17; --MVAC_cAtnow
97 : 29; --MOV_cBnow
98 : 12; --MVAC_R
99 : 26; --MOV_cB
100 : 4; --SUB
101 : 7; --JUMPZ PC
102 :134;
103 :1; --LOAD
104 :6; --( Number of cores - 1)
105 :5; --INC
106 :12; --MVAC_R
107 : 29; --MOV_cBnow
108 : 3; --ADD
109 : 18; --MVAC_cBnow
110 : 1; --LOAD
111 : 3; --( A matrix first address)
112 : 9; --MVAC_alphap
113 : 1; --LOAD
114 : 6; --( Number of cores - 1)
115 : 12; --MVAC_R;
116 : 24; --MOV_row;
117 : 2; --MUL;

118 : 5;--INC;
119 : 12; --MVAC_R;
120 : 21; --MOV_betap
121 : 3; ---ADD
122 : 10; --MVAC_betap
123 : 1; --LOAD
124 : 6; --( Number of cores - 1)
125 : 12; --MVAC_R;
126 : 25; ---MOV_cAT;
127 : 2; ----MUL;

128 : 12; ---MVAC_R;
129 : 22; --MOV_gammap
130 : 3;    --ADD
131 : 11; --MVAC_gammap 
132 : 6;   --JUMP PC
133 : 40;
134 : 32; --ENDOP

END; 