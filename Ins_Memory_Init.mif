DEPTH = 256;                               % Memory depth and width are required %
                                          % DEPTH is the number of addresses %
WIDTH = 12;                               % WIDTH is the number of bits of data per word %
                                          % DEPTH and WIDTH should be entered as decimal numbers %
ADDRESS_RADIX = DEC;                      % Address and value radixes are required %
DATA_RADIX = DEC;                         % Enter BIN, DEC, HEX, OCT, or UNS; unless %
                                          % otherwise specified, radixes = HEX %

CONTENT
BEGIN

0 :  0;          --CLR
1 :  8;        --MVAC_total
2 : 16;         --MVAC_rnow
3 : 17;         --MVAC_cATnow
4 : 18;        --MVAC_cBnow
5 :  1;           --LOAD
6 :  0;         --address of cAT
7 :  14;         --MVAC_cAT
8 :  1;          --LOAD
9 :  1;          --address of row B
10 : 13;         --MVAC_row
11 : 1;         --LOAD
12 : 2;         --address of cB
13 : 15;         --MVAC_cB
14 : 1;          --LOAD
15 : 3;        --address of [alpa_address]
16 : 9;         --MVAC_alphap


--17 : 1;          --LOAD
--18 : 5;      --address of [gamma_address]%
--19 : 11;      --MVAC_gammap%
--20 : 1;          --LOAD%
--21 : 4;       --address of [beta_address]%
--22 : 10;           --MVAC_betap   ---- betap <- AC


17 : 21;          --MOV_betap  ---- AC <- betap
18 : 31;          --LOAD REG
19 : 12;         --MVAC_R
20 : 20;          --MOV_alphap
21 : 31;          --LOAD REG
22 :  2;           --MUL
23 : 12;          --MVAC_R
24 : 19;          ----MOV_total
25 : 3;           --ADD
26 : 8;           --MVAC_total
27 : 27;          --MOV_rnow
28 : 5;           --INC
29 : 16;          --MVAC_rnow
30 : 12;          --MVAC_R
31 : 24;          --MOV_row //MOV_r
32 : 4;           --SUB
33 : 7;           --JUMPZ
34 : 43 ;         --jump to storing instructions
35 : 20;          --MOV_alphap
36 : 5;           --INC
37 : 9;           --MVAC_alphap
38 : 21;          --MOV_betap
39 : 5;           --INC
40 : 10;          --MVAC_betap
41 :  6;           --JUMP PC
42 : 17;
43 : 19;          --MOV_TOTAL
44 : 30;         --STORE
45 : 22;           --MOV_gammap
46 :  5;          --INC
47 : 11;           --MVACgammap
48 :  0;          --CLR
49 :  8;          --MVAC_total
50 : 28;           --MOV_cATnow
51 :  5;          --INC
52 :  17;         --MVAC_cATnow
53 :  12;          --MVAC_ R
54 :  25;          --MOV_cAT
55 :   4;          --SUB
56 :  7;          --JUMPZ PC
57 :  71;
58 :  20;          --MOV_alphap
59 :   5;          --INC
60 :   9;          --MVAC_aphap
61 :  24;        --MOV_row
62 :  12;         --MVAC_R
63 :  21;         --MOV  betap
64 :   4;         --SUB
65 :   5;         --INC
66 :  10;           --MVAC _betap
67 :   0;           --CLR
68 :  16;         --MVAC_rnow
69 :   6;           --JUMP PC
70 :  17;
71 : 0;         --CLR
72 : 16;         --MVAC_rnow
73 :17;         --MVAC_cAtnow
74 : 29;          --MOV_cBnow
75 : 5;           --INC
76 : 18;          --MVAC_cBnow
77 :12;          --MVAC_R
78 :26;          --MOV_cB
79 :4;           --SUB
80 :7;           --JUMPZ PC
81 : 90;
82 :1;           --LOAD
83 :3;         --( A matrix first address)
84 :9;           --MVAC_alphap
85 :21;          --MOV_betap
86 :5;           --INC
87 :10;          --MVAC_betap
88 : 6;           --JUMP PC
89 :17;
90 : 32;          --ENDOP


END; 