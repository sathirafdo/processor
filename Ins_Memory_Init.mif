DEPTH = 256;                               % Memory depth and width are required %
                                          % DEPTH is the number of addresses %
WIDTH = 12;                               % WIDTH is the number of bits of data per word %
                                          % DEPTH and WIDTH should be entered as decimal numbers %
ADDRESS_RADIX = DEC;                      % Address and value radixes are required %
DATA_RADIX = DEC;                         % Enter BIN, DEC, HEX, OCT, or UNS; unless %
                                          % otherwise specified, radixes = HEX %

CONTENT
BEGIN

0 :  0;          --CLR
1 :  8;        --MVAC_total
2 : 16;         --MVAC_rnow
3 : 17;         --MVAC_cATnow
4 : 18;        --MVAC_cBnow
5 :  1;           --LOAD
6 :  0;         --address of cAT
7 :  14;         --MVAC_cAT
8 :  1;          --LOAD
9 :  1;          --address of row B
10 : 13;         --MVAC_row
11 : 1;         --LOAD
12 : 2;         --address of cB
13 : 15;         --MVAC_cB
14 : 1;          --LOAD
15 : 3;        --address of [alpa_address]
16 : 9;         --MVAC_alphap
17 : 1;          --LOAD
18 : 5;      --address of [gamma_address]
19 : 11;      --MVAC_gammap
20 : 1;          --LOAD
21 : 4;       --address of [beta_address]
22 : 10;           --MVAC_betap   ---- betap <- AC
23 : 21;          --MOV_betap  ---- AC <- betap
24 : 31;          --LOAD REG
25 : 12;         --MVAC_R
26 : 20;          --MOV_alphap
27 : 31;          --LOAD REG
28 :  2;           --MUL
29 : 12;          --MVAC_R
30 : 19;          ----MOV_total
31 : 3;           --ADD
32 : 8;           --MVAC_total
33 : 27;          --MOV_rnow
34 : 5;           --INC
35 : 16;          --MVAC_rnow
36 : 12;          --MVAC_R
37 : 24;          --MOV_row //MOV_r
38 : 4;           --SUB
39 : 7;           --JUMPZ
40 : 48 ;         --check this
41 : 20;          --MOV_alphap
42 : 5;           --INC
43 : 9;           --MVAC_alphap
44 : 21;          --MOV_betap
45 : 5;           --INC
46 : 10;          --MVAC_betap
47 :  6;           --JUMP PC
48 :  23;
49 : 19;          --MOV_TOTAL
50 : 30;         --STORE
51 : 22;           --MOV_gammap
52 :  5;          --INC
53 : 11;           --MVACgammap
54 :  0;          --CLR
55 :  8;          --MVAC_total
56 : 28;           --MOV_cATnow
57 :  5;          --INC
58 :  17;         --MVAC_cATnow
59 :  12;          --MVAC_ R
60 :  25;          --MOV_cAT
61 :   4;          --SUB
62 :  7;          --JUMPZ PC
63 :  77;
64 :  20;          --MOVa lphap
65 :   5;          --INC
66 :   9;          --MVAC_aphap
67 :  24;        --MOV_row
68 :  12;         --MVAC_R
69 :  21;         --MOV  b etap
70 :   4;         --SUB
71 :   5;         --INC
72 :  10;           --MVAC _betap
73 :   0;           --CLR
74 :  16;         --MVAC_rnow
75 :   6;           --JUMP PC
76 :  23;
77 :  29;          --MOV_cBnow
78 :   5;           --INC
79 :  18;          --MVAC_cBnow
80 :  12;          --MVAC_R
81 :  26;          --MOV_cB
82 :   4;           --SUB
83 :   7;           --JUMPZ PC
84 :  93;
85 :   1;           --LOAD
86 :   3;         --( A matrix first address)
87 :   9;           --MVAC_alphap
88 :  21;          --MOV_betap
89 :   5;           --INC
90 :  10;          --MVAC_betap
91 :   6;           --JUMP PC
92 :  23;
93 :  32;          --ENDOP


END; 