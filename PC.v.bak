module PC 
#(parameter register_width = 12 , parameter current_PC_value)
(
    input wire read_en, write_en, increment
    input wire clk, reset,

    input wire [(reg_width-1):0] bus_data_in, 
    output reg [(reg_width-1):0] AR_data_out 
);

reg [reg_width-1:0] trash;

@always @(posedge clk)
begin
    if(read_en == 1b'1)
        AR_data_out = current_PC_value;
    else if(write_en & increment)
        current_PC_value = current_PC_value + 1;
    else if(write_en)
        current_PC_value = bus_data_in
    else
        AR_data_out = trash

end

endmodule //PC